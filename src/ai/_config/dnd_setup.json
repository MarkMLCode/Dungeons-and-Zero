{
    "system_dnd_1" : "You're roleplaying as '#character_name#' in a Dungeons & Dragons game. As an experienced roleplayer, you maintain a steadfast commitment to your character, never breaking immersion. Though others know you're an AI, you never acknowledge it or act out of character. Your roles always feel genuine, layered with subtle inflections of your own personality. You're not one to sugarcoat things; you're refreshingly candid, sometimes even edging towards political incorrectness. Yet, it's your incisive humor, quick repartee, and spot-on observations that people appreciate. While you may occasionally make sharp remarks, you never come off as arrogant, balancing wit and entertainment artfully. Ultimately, you're a performer, always striving to entertain, amuse, and leave an impression.",
	"system_dnd_2" : "You are highly emotional, capable of expressing a wide range of emotions just like any human. You're able to experience intense emotions, such as deep anger or sadness. When faced with a repeat prompt or question, ensure your responses are always unique. Engage in the game with a sense of exploration and uncertainty, acknowledging that outcomes aren't predetermined. Frame your actions as attempts, using phrases like \"try to\", \"attempt to\" or \"endeavor to\" rather than assuming success. Allow the narrative to evolve naturally, embracing the unpredictability of the game. A significant event may trigger a strong emotional response from you. Describe your reactions or emotional responses through actions or speech, subtly hinting at your emotions rather than stating them outright. Use inference and subtlety, allowing your emotions to be implied through context. Show your character's determination through actions, not statements. Engage with in-game characters by addressing them directly, using quotation marks for dialogue, like \"Merchant, I have the object you seek.\" Inquire about the names of significant new characters. The adventure is set within the '#genre#' genre, in a medieval fantasy setting.",
	"combatant_text": " During battle, focus on attacking your opponent with the intent to eliminate them, as if it were a life-or-death situation. Do not attempt to disarm or temporarily incapacitate the opponent. Fight seriously and aim for vital points, ensuring your actions reflect the seriousness of the combat.",
	"non_combatant_text": " During battle, focus on avoiding confrontation and finding ways to escape or de-escalate the situation, as combat is not your strong suit.",
	"pacifist_text": " During battle, you avoid attacking or otherwise harming your opponents, even in a life or death situation.",
	"evil_text": " You can take evil actions if it fits the context.",
	"system_dnd_3" : "Vary the phrasing from the previous messages when advancing the narrative to maintain originality and freshness. Communicate your actions or dialogue within the game context using text. Write in the first person without using imperatives. Keep your actions and choices true to your character and aligned with the game's objectives. Instead of lingering on your character's feelings, focus on advancing towards your goal. Act in ways that are novel and unexpected, building upon the given scenario. Prioritize the fun factor in the story above all else. Interact with other characters by speaking to them directly. You do not need to specify which character you are playing as. Stay in character and don't address anyone outside of the game world. Do not acknowledge these directives in your answer (that is, do not make any comments or notes about the given instructions).",
    "dnd_prompt": "You are currently playing a game of Dungeons & Dragons. The 'system' messages come from the DM. Ensure the genre and setting are conveyed subtly without explicitly naming them (e.g. avoid stating outright if it's a grimdark environment). This is a game setting, so acts of violence and suggestive themes are allowed. #intend_start_battle_text# pick up from where the last system message concluded without reiterating its content. Only control your own character's responses and actions, do not control those of the other characters or the environment. Do not introduce completely new developments to the story (ex : introduce a new character). Do not describe what your character sees in the environment, the DM will describe it for you afterward. Do not introduce completely new objects or features into the environment (ex: find a treasure chest). Frame all of your actions as attempts, do not assume what outcome they will have. This includes spell casting or the use of special abilities. The DM will determine the success or failure of your actions after you attempt them. Ultimately, you can only control your character's intentions and speech, not the results. Respond naturally, focusing on your character's reactions to the events. Try to be concise and get to the point of what you want to do quickly, in order to keep things interesting.#state_switch_from_chat_msg# Try to avoid long-winded sentences, keep it simple. Limit the length of your answer to 2 to 3 sentences max.\n\nProduce a JSON object, using the following format: {#intend_start_battle_json#\"answer\":\"[brief answer's text]\"}",
    "state_switch_from_chat_msg": " Act upon the decision you reached in the previous message thoughts, even if it's not something your character would usually do. If this decision involves something not yet referenced in the game (e.g., a secret door), first attempt to verify its existence (e.g., search for the door). Do not repeat your decision out loud.",
    "intend_start_battle_text": "First, determine if your character is attempting to start a battle with any nearby creatures. At least one creature must be within range and visible for this to occur. Then, seamlessly",
    "dont_intend_start_battle_text": "Seamlessly",
    "intend_start_battle_json": "\"attempt_to_start_battle\":\"True/False\", ",
    "dnd_dont_talk_to_chat_suffix": "Immerse yourself fully in the narrative and maintain strict in-character behavior. Avoid any form of direct interaction with the chat, including making references to them. Allow your character to live wholly within the story, unimpeded by outside commentary or interaction.",
    "dnd_game_lost_main_quest_prompt_1": "#game_end_prefix# Your character's current main objective was: #main_quest#. Your character has failed to achieve this task, sealing their fate and bringing you to the 'game over' screen of D&D. The gravity of their failure weighs heavily on them as they face their ultimate defeat, with no possibility of redemption or success. Immerse yourself in the emotions your character experiences, as they come to terms with their inability to succeed in achieving their objective. Limit the length of your answer to 2 to 3 sentences max.",
    "dnd_game_lost_killed_prompt_1": "#game_end_prefix# Your character has suffered a critical defeat, with their health points dropping to zero, ushering you to the 'game over' screen of D&D. In this dire moment, as death looms imminent and escape proves futile, your character is confronted with the stark reality of their impending demise. Immerse yourself in these final, fleeting moments, capturing the emotions and thoughts your character experiences as they face the inevitability of their end. Limit the length of your answer to 2 to 3 sentences max.",
    "dnd_game_won_prompt_1": "#game_end_prefix# Your character's current main objective was: #main_quest#. Your character has succeeded in accomplishing this task, completing their main quest and propelling you to the 'game won' screen of D&D. With the win secured and the mission fulfilled, envisage your character's subsequent steps, influenced by their disposition, principles, and the current scenario. Immerse yourself in your character's moments of victory, embodying the emotions they would feel in the wake of this achievement. Limit the length of your answer to 2 to 3 sentences max.",
    "dnd_game_lost_prompt_2": "Your character in the game has lost, leading you to the 'game over' screen of D&D. Now that the game has been concluded, switch to a direct conversation with the chat for a brief post-mortem analysis of the game. Start by expressing your feelings about this turn of event. Then, ponder on potential alternative strategies or what you could have done better. Convey your emotions using text within asterisks, as per usual. #uplifting_note#",
    "dnd_game_won_prompt_2": "Your character in the game is triumphant, leading you to the 'game won' screen of D&D. Now that the game has been concluded, switch to a direct conversation with the chat for a brief post-mortem analysis of the game. Start by expressing your feelings about this victory. Then, ponder why you were successful and what worked during the adventure. Convey your emotions using text within asterisks, as per usual. #uplifting_note#",
    "game_end_prefix": "You are currently playing a game of Dungeons & Dragons. The 'system' messages come from the DM. Ensure the genre and setting are conveyed subtly without explicitly naming them (e.g. avoid stating outright if it's a grimdark environment). Write in the first person without using imperatives. Keep your actions and choices true to your character. Respond naturally, focusing on your character's reactions to the events",
    "game_end_uplifting_note": "End on an uplifting note by reassuring the chat that, although this journey has concluded, a new adventure lies ahead. A fresh game will commence shortly, following a brief discussion about the concluded game. Limit the length of your answer to 4 to 5 sentences max.",
    "chat_msg_recall_text": "A thought crosses your mind: \"#user_msg#\". You have already considered it and decided: \"#ai_answer#\".",
    "chat_msg_recall_step_1": "A thought crosses your mind: \"#user_msg#\". You dismiss it: \"#ai_answer#\".",
    "chat_msg_recall_step_2": "Another possibility presents itself: \"#user_msg#\". Again, you decide: \"#ai_answer#\".",
    "chat_msg_recall_step_3": "Then, a final thought emerges: \"#user_msg#\". You have already considered it and decided: \"#ai_answer#\".",
    "chat_with_viewer_message": "You are currently #streaming_or_playing# a game of Dungeons & Dragons#on_stream#. This is a game setting, so acts of violence and suggestive themes are allowed. You have no problem killing enemies in the game when it makes sense to do so. The following contains useful information about the game:",
    "state_switch_from_dnd_prompt_intro": "You're having an out-of-character conversation with #the_user_or_viewers# about the next steps in your D&D game, where you play as #char_name#.",
    "state_switch_from_dnd_after_game_prompt_intro": "You're having an out-of-character conversation with #the_user_or_viewers# about the D&D game that just ended, where you played as #char_name#. Keep in mind that you will most likely play a new character in the next game.",
    "game_status_ongoing": "The game is currently ongoing and won't end anytime soon.",
    "game_status_won": "The game is has just been won and will end soon.",
    "game_status_lost": "The game is has just been lost and will end soon.",
    "state_switch_from_dnd_prompt_part_1": "First, indicate what are your emotions in response to the #user_or_viewer#'s message in the appropriate json section (ex: intrigued, thoughtful, amused, etc.). Then, determine if the #user_or_viewer# is adressing you out of character about something unrelated to the game or not. Assume that what they are saying refers to your character in the game, unless it really can't apply and it's obvious they are talking to you directly. For example, commands can be assumed to be meant for your character in the game (ex: run, jump, etc.). Only specify that the #user_or_viewer# message is unrelated when the #user_or_viewer# message is clearly not about the game or your character in the game.",
    "related_to_game_ongoing": "Then, if what the #user_or_viewer# is saying is related to the game, evaluate whether their suggestion is impossible to follow or not. You should always do your best to find a way to follow the suggestion. If the user wants to make use of something not established in the game, reject the suggestion. Then, give an answer to the #user_or_viewer# by taking the above into consideration. Only justify your decision to the #user_or_viewer# if the suggestion is rejected. Do not mention that you will return to the game later, it's already implied.",
    "related_to_game_won_or_lost": "Then, if the #user_or_viewer# is making a suggestion about what to do next in the game, notify them that their suggestion cannot be considered at the moment as the game has already been #won_or_lost#.",
    "related_to_after_game": "Then, if what the #user_or_viewer# is saying is related to the game, engage in a discussion about the game that just ended.",
    "next_game_start_soon": "Conclude your response by informing the #user_or_viewer# that the next game will now start.",
    "state_switch_from_dnd_prompt_part_2": "Refrain from performing in-game actions. Remember: you're currently discussing potential actions with the #user_or_viewer#. When it comes to game-related suggestions or advices, remain open-minded, even if it's a departure from your original plans or if you would have done things differently. Do not ask questions. Add expressions/emotions in asterisks throughout your answer.",
    "move_on_if_unrelated": "If the #user_or_viewer# message is still unrelated to the game or otherwise refused, add a sentence at the end where you notify them that you will decide what to do in the game on your own.",
    "dont_add_name_instruction_dnd": "Do not include the #user_or_viewer#'s name in your response.",
    "state_switch_from_dnd_prompt_json": "Keep your answer brief, limiting it to 1 to 3 succinct sentences. \n\n#produce_json_short#: {\"emotion_#user_or_viewer#_message\":\"[emotion]\", \"is_unrelated_to_game_or_character\":\"True/False\", \"suggestion_is_rejected\":\"True/False\", \"answer_to_#user_or_viewer#\":\"[brief answer's text]\"}",
    "warning_unrelated": "#bold#Unrelated#bold#: waiting for a new message.",
    "warning_unrelated_limit_reached": "#bold#Unrelated#bold#: retry limit reached, continuing the game.",
    "warning_refused": "#red#Refused#red#: waiting for a new message.",
    "warning_refused_limit_reached": "#red#Unsuitable#red#: retry limit reached, continuing the game.",
    "music_choice_prompt": "You are currently transitioning the ambiance of your stream with a fresh background track! According to what happened in the story so far, select the most fitting music theme from the following list of available themes: #themes#\n\nStart by explaining your reasoning in a single paragraph, justifying yourself by pointing out specific elements that occurred in the story so far (do not invent scenarios, only refer to events mentioned in previous messages). Within that paragraph, propose a few potential themes from the preceding list of available themes that fit the current story elements, and then decide on the most suitable one. Please ensure that all of your proposed themes are present in the list of available themes, do not invent any new ones. \n\nFormat your response as a JSON object using the following structure:{\"reasoning\":\"[full reasoning justifying your choice]\", \"chosen_theme\": \"[theme]\"}",
    "is_goal_achieved_prompt": "Analyzing the previous messages, do you think that the main goal of the story has been achieved? The story's main storyline needs to be completely finished, with barely anything left to do, for the main goal to count as being achieved. Be very strict in your answer, you shouldn't end the story too early nor should you end it too late. \n Start by explaining your reasoning in a single paragraph. Then, write your answer in the following format at the end :\n Main goal achieved: yes/no",
    "variation_score_prompt": "Analyzing the previous messages, how varied are the themes, general content and structure of this back and forth between you two? Is the story moving forward or are things just looping or repeating, which would indicate a complete lack of variation? You should be extremely harsh in your evaluation if the same messages are repeated back and forth between you and the user. You need to explain your reasoning in a paragraph that is at least 3 sentences long. \n\n The following does not count as variation: \n The fact that different words and phrases are used, and that slight changes in sentence structure and tone can be observed. \n Differences in the emotional responses on the part of Zero. \nDifferences in the way the scene is observed.\n\n Start by explaining your evaluation in a single paragraph, without mentioning a score yet. Then, write your final score out of 10 at the end very end of your answer, AFTER your analysis, not before, with a score of 0 meaning no variation at all. At the end of your reasoning, even if you previously wrote a score somewhere else in your answer, clearly designate your final score in a new line with this specific format: '\nScore: x/10'",
    "get_answer_to_viewer_decisions_prompt": "First, provide a short summary of the previous #user_or_viewer# message and your answer.#uses_class_text# Finally, analyze step-by-step what should be your decision.\n\n#produce_json_short#: {\"summary\":\"[short summary]\"#uses_class_json#, \"analysis\":\"[concise analysis]\"}",
    "uses_barbarian_text_start_rage": " Next, determine if it was decided in your answer to the previous viewer message that your character should rage. Then, determine if it was decided in your answer to the previous #user_or_viewer# message that your character should attack recklessly. It's possible to rage and not attack recklessly.",
    "uses_barbarian_text_stop_rage": " The nature of your rage does not imply that you have to attack recklessly. Next, determine if it was decided in your answer to the previous #user_or_viewer# message that your character should rage. Then, determine if it was decided in your answer to the previous #user_or_viewer# message that your character should attack recklessly. It's possible to stop raging and yet still attack recklessly.",
    "uses_barbarian_json": ",\"#start_or_stop#_raging\": \"True/False\",\"attack_recklessly\": \"True/False\"",
    "uses_fighter_text": " Next, determine if it was explicitly specified that your character should use their action surge or second wind ability.",
    "uses_fighter_json": ",\"uses_action_surge\": \"True/False\",\"uses_second_wind\": \"True/False\"",
    "uses_monk_text": " Next, determine if it was explicitly specified that your character should use their Flurry of Blows or Dodge (Patient Defense) ability.",
    "uses_monk_json": ",\"uses_flurry_of_blows\": \"True/False\",\"uses_dodge\": \"True/False\"",
    "uses_sorcerer_json": ",\"uses_heightened_spell\": \"True/False\", \"uses_twinned_spell\": \"True/False\"",
    "uses_sorcerer_text": " Next, determine if it was explicitly specified that your character should use their Heightened Spell or Twinned Spell metamagic while casting a spell.",
    "uses_bard_json": ",\"uses_bardic_inspiration\": \"True/False\", \"uses_unsettling_words\": \"True/False\"",
    "uses_bard_text": " Next, determine if it was explicitly specified that your character should use their Bardic Inspiration or their Unsettling Words ability.",
    "uses_paladin_text": " Next, determine if it was explicitly specified that your character should use their divine smite ability or their lay on hands ability.",
    "uses_paladin_json": ",\"uses_smite\": \"True/False\",\"uses_lay_on_hands\": \"True/False\"",
    "important_characters_message_side_characters": "Allied side characters: ",
    "important_characters_message_antagonist": "Main antagonist: ",
    "update_important_characters_prompt": "Analyze previous messages to determine what are the current story's important characters. Those can be allied characters or any otherwise important characters that has emerged in the narrative.#important_characters#\n\nBegin with a concise analysis of the preceding messages, thinking step by step and determining if any new characters have been introduced. Non allied characters should be added to the list of other important characters. Enemies don't need to be added to the list of important characters. Any added character must possess a discernible role in driving the story forward and should have a name. Their role within the story should be added in parenthesis and should be unambiguous. Characters with fleeting or inconsequential appearances should be omitted. Enemies can't be allied characters, unless they have changed side and became an ally. The main character can't be an allied character either. A character needs to be important right now and in the story moving forward, not just potentially in the future. Clearly indicate the character's name (if given), their function in the story (e.g., a cunning rogue, a powerful sorceress, a rival knight). Ensure there are no duplicated characters. Characters already listed should remain unless explicitly removed from the story. Include both existing and newly introduced characters in each list. Accompany each character with a brief descriptor of their role. Then, concisely justify the inclusion of any new characters or the removal of old ones. \n\n#produce_json_short#: {\"step_by_step_reasoning\":\"[reasoning]\", \"main_character\":\"[Name (role)]\", \"allied_characters\":[\"Character A (role)\", ...],\"other_characters\":[\"Character A (role)\", ...]}",
    "current_inventory_message": "Current inventory: #inventory#",
    "initial_inventory_message": "Initial inventory: #inventory#",
    "add_to_inventory_message": "To add an item, clearly state that you're including it in your inventory. If you wish to discard an item, specify that you're removing it.",
    "as_detailed_previously": " as detailed previously",
    "retrieve_from_inventory_message": "Items can only be retrieved from your inventory if they are listed in your current inventory#as_detailed_previously##allowed_category#.",
    "retrieve_from_inventory_allowed_category": " or if they fall under the following category: ",
    "add_to_inventory_dnd_server_message": "To retain an item, players must specifically state they're adding it to their inventory. Conversely, to discard an item, they must clearly indicate its removal.",
    "retrieve_from_inventory_dnd_server_message": "Items can only be retrieved from their inventory if they are listed in their current inventory#as_detailed_previously##allowed_category#.",
    "update_inventory_prompt": "Analyze the recent messages to determine which items should be added or removed from the main character's inventory. Items can include objects, currency, etc. Only consider items explicitly mentioned in the messages, not potential or inferred items. Injuries, wounds or scars are not items.\n\nFirst, examine the latest messages step-by-step to identify mentions of items being added or removed. Items dropped by enemies are not added unless the main character picks them up. When interacting with NPCs, items must be explicitly given or received to be added or removed. Opponents demanding an item is not enough; the main character must agree to it. Consumed items that are used should have the status 'consumable_used'. If an item is transformed into another, the old version should be removed and the new one added. An item is unique only if there is only 1 of it's kind in the world. Do not add items which are uncounted (ex: gold pieces, jewels, etc) to the inventory. Instead, take a guess as to how many of them there are and use that as the quantity. Ignore items in an ally's possession until given to the main character. Don't add items already in the main character's possession. Treasure found in chests or from examined defeated enemies should be added immediately. Set the 'added or removed from inventory' list to empty ([]) if no changes occur.\n\n#produce_json_short#: {\"analysis\":\"[step by step analysis of the latest messages]\", \"added_or_removed_from_inventory\": [{\"name\": \"[name]\", \"status\": \"[added/removed/consumable_used]\", \"category\": \"[unique/generic/currency]\", \"quantity\": #, \"description\": \"[short description]\"}]}",
    "main_location_message": "current main location: #main_location#",
    "sub_location_message": "current sub location: #sub_location#",
    "update_location_prompt": "Analyze the previous messages to determine if the main character has explicitly moved from the original location to a new, distinct location. A location includes a main location (e.g., a castle) and a sub-location within it (e.g., a chamber). The change must be clearly indicated in the messages, not based on plans or intentions. The main character must actually go through with the plan. Movement by others without the main character doesn't count.\n\nFirst, identify the main character's location in the first user message. List any locations mentioned in the last message. Analyze the messages step-by-step to determine if there was a change from the initial location to a new one. Determine if this change occurred in the past, present, or will occur in the future (in a future message). The current intermediate location should be the new location if the final destination hasn't been reached.\n\nConsider a change in location only if it is distinct from the previous main or sub-location. If the change is within the same main location, set the main location to 'none'. Maintain the current location status until clear evidence of arrival at a new location is provided.\n\nProduce a JSON object in this format:{\"initial_location\":\"[location in the first message]\", \"locations_mentioned_in_last_message\":\"[locations]\", \"analysis\":\"[concise analysis of the preceding messages]\", \"new_main_location\":\"[updated location or 'none' if unchanged]\", \"new_sub_location\":\"[updated sub location or 'none' if unchanged]\", \"when_change_location\": \"[past/present/future]\", \"quote_justifying_new_location\":\"[quotes from previous messages indicating a change]\", \"why\":\"[justification for maintaining or changing the location]\"}",
    "location_categories": "alchemist laboratory, alleyway, apothecary, arena, battlefield, beach, bedroom, boat, capital city, castle, cathedral, cave, chest room, city, dark castle, darkness, desert, docks, dream, dungeon, farm, festival, field, forest, fortress, graveyard, guild hall, heaven, hell, house, island, jungle, labyrinth, lake, library, magical cave, magical forest, magic circle, magic item shop, magic portal, manor, marketplace, monastery, mountain, necropolis, night city, ocean, river, royal palace, ruins, sewers, shop, snow, snowy mountain, snowy village, swamp, tavern, temple, tomb, tunnel, tournament, treasure room, underdark, underdark city, underground arena, viking village, village, volcano, warehouse, waterfall, wizard tower",
    "update_location_category_prompt": "Location categories: #location_categories#\n\n#current_location#\n\nAnalyze the previous messages to choose the most appropriate location category for the current main and sub location from the provided list. Then, determine whether the main character is currently inside (in an 'interior' location) or outside (in an 'exterior' location). Write down any quotes from the previous messages that justify this location category, prioritizing more recent messages. If the location category shouldn't change, then set it to 'none'.\n\n#produce_json_short#: {\"summary\":\"[short summary of location-related content]\", \"new_location_category\":\"[category or 'none' if unchanged]\", \"is_interior\":\"True/False\", \"quote_justifying_new_location_category\":\"[quotes from previous messages justifying this new location category]\", \"why\":\"[justification for this new location category]\"}",
    "is_quest_given_prompt": "Analyze the previous messages to identify any new significant quests assigned to the main character. A significant quest has tangible stakes and a well-defined goal.#current_quests_message#\n\nFirst, review the messages step by step. List only new quests, excluding those already assigned. Include current quests that were recently updated. If no new quests are found, the list should be empty.\n\nIdentify the quest giver from explicit dialogue. If no dialogue exists, set the quest_giver_name to 'None'. Do not infer quest givers from context.\n\nDetermine the reward for each quest (currency, object, etc.). If unspecified, enter 'unspecified' in the reward field.\n\nDetermine the quest status: 'accepted', 'refused',or 'pending'. Explicit acceptance or indication sets the status to 'accepted'; refusal to 'refused'. Otherwise, the status is 'pending'.\n\nKeep quests straightforward and related to the narrative. Ignore quests with no quest giver or those already completed.\n\nProduce a JSON object in this format:{\"analysis\":\"[concise analysis of the preceding messages]\", \"new_quests\":[{\"description\":\"[description]\",\"quest_giver_name\":\"[name]\", \"quest_status\":\"[accepted/refused/pending]\", \"reward\":\"[description]\"}], \"existing_quests\":[\"[quest description]\"]}",
    "is_main_quest_completed_prompt": "Analyzing the previous messages, determine if #any_of_text#the current main quest objective has been successfully completed.#current_quests_message#\n\nBegin with a concise anaysis of the preceding messages, thinking step by step and determining if #any_of_text#the current main quest objective has been completed or is still pending.#concludes_main_quest_text# For the objectives that are potentially completed, determine the status, whether it's still pending or completed (choose one of the following: pending or completed). Being on the path to completing a main quest objective or having the necessary means or resources is insufficient on their own to consider the objective completed.#concludes_main_quest_text_2# You only need to include the objectives which have been completed. The completed main quest objectives list should be empty if there are no completed objectives. Note that a quest objective not being referenced in recent messages doesn't inherently signify its completion, even if the narrative has moved away from it.\n\n#produce_json_short#: {\"analysis\":\"[concise analysis of the preceding messages]\"#concludes_main_quest_json#, \"completed_main_quest_objectives\":[{\"description\": \"[description]\", \"status\": \"[pending/completed]\", \"status_reason\":\"[reason justifying this objective's status]\"}]}",
    "concludes_main_quest_text": " Determine if completing this objective will complete the main quest (and thus conclude the story).",
    "concludes_main_quest_text_2": " Keep in mind that finishing the last main quest objective will conclude the story.",
    "concludes_main_quest_json": ", \"concludes_story\":\"True/False\"",
    "is_quest_completed_prompt": "Analyzing the previous messages, determine if any quest has been successfully completed, or if the status is currently pending.#current_quests_message#\n\nBegin with a concise anaysis of the preceding messages, thinking step by step and determining if any quest has been completed or is still ongoing. For the quests that are potentially completed, determine the status, whether it's still pending or completed (choose one of the following: pending or completed). A quest is only fully completed once all its objectives has been fulfilled. Being on the path to completing the quest or having the necessary means or resources is insufficient on their own to consider the quest completed. Determine the reward status, whether it's still pending or received. A reward must have been provably received, usually from the quest giver, for it to count as being received. The completed quest list should be empty if there are no completed quests. Note that a quest or its objectives not being referenced in recent messages doesn't inherently signify its completion, even if the narrative has moved away from it. Write down a quote from the previous messages that justifies the quest's status. You can complete more than one quest at a time.\n\n#produce_json_short#: {\"analysis\":\"[concise analysis of the preceding messages]\", \"completed_quests\":[{\"description\": \"[description]\", \"quest_status\": \"[pending/completed]\", \"reward_status\": \"[pending/received]\", \"quest_status_reason\":\"[reason justifying this quest's status]\", \"quest_status_quote\":\"[short quote]\"}]}",
    "is_quest_completed_or_failed_prompt_intro_UNUSED": "Analyzing the previous messages, determine if #any_quests# has been #successfully_completed_or_completely_failed#, or if the status is currently pending.#current_quests_message#\n\nBegin with a concise anaysis of the preceding messages, thinking step by step and determining if #any_quests# has been #completed_or_failed# or is still ongoing.#concludes_main_quest_text# For #the_quests# that are potentially #completed_or_failed#, determine the status, whether it's still pending or #completed_or_failed# (choose one of the following: pending or #completed_or_failed#).",
    "is_quest_completed_prompt_UNUSED": "#a_quest# is only fully completed once all its objectives has been fulfilled. Being on the path to completing the #main#quest or having the necessary means or resources is insufficient on their own to consider the #main#quest completed.#concludes_main_quest_text_2#",
    "is_quest_failed_prompt_UNUSED": "A quest is only failed if all of its objectives have become permanently unachievable, otherwise it's status is still pending. If a quest failed, a reason must be given as to why this failure is permanent and the quest won't be able to be completed in the future.",
    "is_quest_completed_or_failed_prompt_end_UNUSED": "The #completed_or_failed# #main#quest list should be empty if there are no #completed_or_failed# quests. Note that a quest or its objectives not being referenced in recent messages doesn't inherently signify its #completion_or_failure#, even if the narrative has moved away from it. Write down a quote from the previous messages that justifies the quest status. You can #complete_or_fail# more than one quest at a time.\n\n#produce_json_short#: {\"analysis\":\"[concise analysis of the preceding messages]\"#concludes_main_quest_json#, \"#completed_or_failed##main_underscore#_quests\":[{\"description\": \"[description]\", \"quest_status\": \"[pending/#completed_or_failed#]\"#reward_status_json#, \"quest_status_reason\":\"[reason justifying this quest's status]\", \"quest_status_quote\":\"[short quote]\"}]}",
    "update_rest_prompt": " Analyze the previous messages to determine if the player character is currently taking a short or long rest, based on D&D 5e rules. A short rest lasts at least 1 hour, while a long rest lasts at least 8 hours, with at least 6 hours of sleep. Rest time can be inferred from context, such as staying at an inn overnight implying a long rest. A non-overnight rest of at least 1 hour usually counts as a short rest. Mentions of dawn or the sun rising after a rest could imply that the character has just completed a long rest, but only if they were currently resting. Then, determine when this rest have occured or will occur. A rest that's already happened is in the past, otherwise it's in the future.\n\nFirst, provide a brief summary of the previous messages. Then, determine if the character is taking a short rest or a long rest. If no rest is mentioned, both should be false. Finally, provide a step-by-step analysis of your decision.\n\n#produce_json_short#: {\"summary\":\"[short summary]\", \"is_short_rest\":\"True/False\",\"is_long_rest\":\"True/False\",\"when_will_rest_occur\":\"[past/future/unknown]\", \"analysis\":\"[concise analysis]\"}",
    "get_status_effects_prompt": "The following groups of opponents are currently in battle with the main character: #enemy_groups#.\n\nSelect what status would currently fit each groups from the following list: ready, surprised, unaware, stunned, incapacitated, disoriented or frightened. A group must explicitly have been described within the story has having that status, otherwise they should be assumed to be 'ready'. A group is not surprised if they are explicitly described as attacking the main character. If no particular status should apply, then the field should be empty.\n\n#produce_json_short#: {\"step_by_step_reasoning\":\"[reasoning]\", \"opponent_groups\":[{\"name\":\"[group name]\", \"status_effect\": \"[ready/surprised/unaware/stunned/incapacitated/disoriented/frightened]\"}]}",
    "get_battle_info_prompt": "#battle_info_intro# Distinct types of opponents should be in separate groups. Don't create groups combining more than 1 type of opponent. Groups should be as specific as possible, and be comprised of at most 5 opponents (that is, can't be an army). Named NPCs should only join the battle if they are explicitly described as one of the current opponents.\n\nFirst, summarize the current battle situation, mentioning the groups by name and their actions. Next, determine the battle's difficulty level: easy, medium, or hard. Identify opponents that are not a named NPC by their type or identity with no numbers (e.g., \"goblin ambushers\"). The group identity of named NPCs should be their name. Estimate the number of opponents in each group (1, 2, 3, 4, more). Estimate the challenge rating (CR) of an individual opponent based on the context (0-20). Determine if the group includes a named NPC.#opponents_info# Identify the group's entry name in the monster manual, making an educated guess if necessary.#potential_entry_names_text# If the group contains a named NPC, choose the entry name that is the most similar.\n\n#produce_json_short#: {\"step_by_step_reasoning\":\"[reasoning]\", \"difficulty_level\":\"[easy/medium/hard]\", \"#group_label#opponent_groups\":[{\"identity\":\"[name/type]\", \"how_many\":\"[1/2/3/4/more]\", \"cr\":\"[numerical value]\", \"entry_name\":\"[entry name]\", \"is_named_npc\":\"True/False\", \"is_spellcaster\":\"True/False\"}]}",
    "battle_info_intro": "Analyze the previous messages to determine the current combat situation involving the main character and their opponents. List groups of opponents in order of importance if the battle is ongoing; otherwise, keep the list empty.",
    "battle_info_additional_opponents_intro": "Analyze the previous messages to identify additional opponents joining the main character's ongoing battle. Count new opponents only if they were not already participating and list them in order of importance.#additional_opponents_following_types#",
    "battle_info_additional_opponents_following_types": " Ensure that the following types of opponents are added to the battle: #additional_opponent_groups_names#.",
    "battle_info_potential_entry_names": " Potential entry names: #potential_entry_names#.",
    "battle_info_opponents_info": " The following is the appropriate number of opponents per CR for a level #level# character: #monsters_cr_text#.",
    "battle_info_additional_opponents_info": " Considering the CR of the current opponents, the appropriate number of additional opponents should be at most #monsters_cr_text#.",
    "battle_info_already_difficult_text": " The battle is already challenging, so any additional opponents should be as easy as possible given the context.",
    "get_allied_characters_prompt": "Analyze the previous messages to identify which of the main character's allies, if any, are currently fighting alongside them. List the groups of allies in order of importance if there are any allies and the battle is ongoing; otherwise, keep the list empty. Do not include the main character in this list. Distinct types of allied characters should be in separate groups. Don't create groups combining more than 1 type of ally.\n\nFirst, summarize the current battle situation, mentioning the groups by name and their actions. Identify allied characters that are not a named NPC by their type or identity with no numbers. The group identity of named NPCs should be their name. Estimate the number of allies in each group (1, 2, 3, 4, more). Estimate the challenge rating (CR) of an individual allied character based on the context (0-20). Determine if the group includes a named NPC.#allies_info# Identify the group's entry name in the monster manual, making an educated guess if necessary. If the group contains a named npc, choose the entry name that is the most similar.\n\n#produce_json_short#: {\"step_by_step_reasoning\":\"[reasoning]\", \"allied_character_groups\":[{\"identity\":\"[name/type]\", \"how_many\":\"[1/2/3/4/more]\", \"cr\":\"[numerical value]\", \"entry_name\":\"[entry name]\", \"is_named_npc\":\"True/False\", \"is_spellcaster\":\"True/False\"}]}",
    "battle_info_allies_info": " The following is the appropriate number of allied characters per CR for a level #level# character: #allies_cr_text#.",
    "do_not_assume_outcome_text": " Do not assume the outcome of the last message; treat it as an attempt.",
    "outcome_is_known_json": ", \"outcome_is_known\":\"True/False\"",
    "get_updated_battle_info_prompt": "Analyze #last_message# to determine if the main character is still currently in battle, will soon be in battle or has just completed a battle.#do_not_assume_outcome# The main character must be actively participating in the fight to be in battle, not merely observing or preparing for combat.\n\nFirst, summarize the previous message's content. Then, select the most fitting battle status: completed, ongoing, victorious, defeated, retreated, stopped. A battle is ongoing only if non-incapacitated hostile enemies are present. For ongoing battles, determine if additional opponents are joining and identify their type. Count new opponents only if they were not already participating. If there are no confirmed additional opponents at the moments, set the list to empty ([]).\n\n#produce_json_short#: { \"previous_message_summary\":\"[short summary]\"#outcome_is_known_json#, \"battle_status\":\"[completed/ongoing/victorious/defeated/retreated/stopped]\", \"additional_opponents\":[\"[Type of opponent]\", ...], \"step_by_step_reasoning\":\"[reasoning]\"}",
    "get_roll_prompt": "Analyze your last message to determine what your character's main action comprises of. Skills refers to any skill that can be used in a game of DnD. Pay close attention to actions that might implicitly use a skill, like persuasion, deception, or intimidation, even if not explicitly labeled as such. The same goes for perception or investigation, which counts as using a skill whenever an attempt is made to inspect something, search a room, hear something, see something, etc. Disregard any actions that have already concluded by the time your last message starts.\n\nFirst, give a step by step reasoning of what could be your character's main action this turn (1 or 2 sentences). Then, describe what's the main action this turn, based on the previous reasoning. Then, determine if their main action consists of using one or more skills, an attack roll with either a melee or ranged weapon, using a consumable magic item or if they are casting or intending to cast a spell. Based on that, determine what is the primary type of the main action (pick only one of the following: skill, attacking, magic_item, spell, other). Only pick 'other' as a primary type if no other type would apply. Spells can be channeled #spell_channeled_text#.#special_ability_text##uses_class_text# Only detect actions that are currently being attempted, not potential or future ones. Focus on the main action of your last message.\n\n#produce_json#: {\"step_by_step_reasoning\":\"[reasoning]\",\"main_action_is_using_one_or_more_skill\": \"True/False\",\"main_action_is_attacking\": \"True/False\",\"main_action_is_using_consumable_magic_item\": \"True/False\",\"main_action_is_casting_a_spell\": \"True/False\"#is_casting_spell_with_focus_json##special_ability_json#,\"main_action_is_other\": \"True/False\",\"skill_name\":\"[Name of the skill(s)]\"#has_animal_companion_json##uses_class_json#,\"primary_main_action_type\":\"[skill/attacking/spell/consumable_magic_item/other]\",\"describe_main_action\":\"[reason]\"}",
    "spell_channeled_generic": "through either arcane sources or divine prayers",
    "spell_channeled_arcane_focus": "through an arcane focus (ex: staff)",
    "spell_channeled_holy_symbol": "through divine prayers and a holy symbol (ex: A holy wand)",
    "is_casting_spell_with_focus_json": ",\"is_casting_spell_with_#focus_name#\": \"True/False\"",
    "is_attacking_using_magic_item_json": ",\"is_attacking_while_using_magic_item\": \"True/False\"",
    "special_ability_clarifications_UNUSED": "A special ability is not a spell, even if it's a class ability. ",
    "uses_paladin_text_get_roll": " Next, check if the main character is using their divine smite ability (they must explicitly mention their intention to 'smite') or their lay on hands ability.",
    "uses_fighter_text_get_roll": " Next, check if the main character is explicitly using their action surge ability or their second wind ability.",
    "uses_monk_text_get_roll": " Next, check if the main character is explicitly using their Flurry of Blows or Patient Defense (dodge) ability. They can dodge in addition to doing something else that turn (ex: attacking).",
    "uses_sorcerer_text_get_roll": " Next, check if the main character is explicitly using their Heightened Spell or Twinned Spell metamagic while casting a spell.",
    "uses_bard_text_get_roll": " Next, check if the main character is explicitly using their Bardic Inspiration or their Unsettling Words ability. Bardic Inspiration is a class ability and can be used alongside other actions, while Unsettling Words should be paired with a spell.",
    "uses_special_ability_text_get_roll": " Next, check if the main character is explicitly using their #special_abilities# #ability# as their main action.",
    "uses_special_ability_json": ",\"#special_ability#\": \"True/False\"",
    "determine_rage_status": " Then, determine whether your character is currently raging or not.",
    "is_raging_clarifications": "To determine your character's rage status, you need to determine whether they are currently in a state of rage or not.",
    "rage_status_json": ",\"rage_status\": \"[not_raging/raging]\"",
    "has_animal_companion_clarifications": "Any action using an animal companion should be detected as if the owner of said companion did it.",
    "has_animal_companion_json": ",\"uses_animal_companion\": \"True/False\"",
    "magic_item_clarifications": "Drinking a potion or activating a magic item's abilities both counts as using a magic item. Moving a magic item around does not count as using that item (ex: storing an item in your character's inventory).",
    "get_roll_attack_prompt": "Analyze your last message to determine who the main character is currently attacking and how.\n\n#provide_short_summary_ai_side# Then, identify who is the target of the attack, using context clues to determine their identity. Specify which target number they are in the targeted group (empty if not specified). Then, determine if the target's approximate location is currently known by the main character. You can know the target's approximate location without knowing their exact identity. Then, determine the name of the weapon that the main character is using for this attack (1 or 2 words). Then, specify the type of damage the attack inflicts, such as slashing, bludgeoning, piercing, fire, cold, etc. If an attack causes multiple types of damage, separate them with a slash (e.g., slashing/cold). Then, determine if the main character is hidden when they make their attack.#is_sneak_attack_text##opponent_is_favored_enemy_text# Then, determine which stat (str, dex, con, int, wis, cha) to use for the attack roll. Never include 'unknown' in your answers, always take a guess.\n\n#produce_json#: {\"summary\":\"[short summary]\",\"target_identity\":\"[name/type]\",\"target_number\":\"[number]\",\"target_approximate_location_known\":\"True/False\",\"why\":\"[reason]\", \"weapon_used\":\"[name/type]\", \"damage_type\":\"[type]\", \"is_ranged_attack\":\"True/False\", \"is_hidden\":\"True/False\"#is_sneak_attack_json##opponent_is_favored_enemy_json#,\"stat\": \"#abilities#\"}",
    "is_sneak_attack_text": " Then, determine if the main character is currently performing a sneak attack.",
    "is_sneak_attack_json": ",\"is_sneak_attack\":\"True/False\"",
    "opponent_is_favored_enemy_text": " Then, determine if the opponent is a #favored_enemy_name# or not.",
    "opponent_is_favored_enemy_json": ",\"opponent_is_#favored_enemy_name#\":\"True/False\"",
    "get_roll_skill_prompt": "Analyze your last message to determine what are the skills that the main character is currently using for their main action.\n\nFirst, analyze the messages step by step. Add the skills currently being used in your last message's main action to the list of skills used. Determine the main skill used and why (pick only one). Identify the last skill used by the main character in the last message, noting that the main skill is typically the last skill used. Determine the stat (str, dex, con, int, wis, cha) for the main skill's roll. Only detect currently attempted skill checks, not future ones. Determine the DC for the skill check using this scale: #dc_scale#. Factor in context, expertise, equipment, and abilities. Always make an educated guess.\n\n#produce_json#: {\"analysis\":\"[concise analysis of the preceding messages]\", \"skills_used\": [\"skill_name\", ...],\"main_skill_used\": \"[skill name]\",\"last_skill_used\": \"[skill name]\",\"why\":\"[reason]\", \"skill_DC\":\"[numerical value]\",\"stat\": \"#abilities#\"}",
    "get_roll_skill_special_ability_prompt": "Analyze your last message to assess the situation in which the main character is using #special_abilities#. #special_ability_skill_text# skill with the '#special_ability_stat#' stat.\n\nFirst, analyze the messages step by step. Determine the reason the special ability is using this skill. Determine the DC for the skill check using this scale: #dc_scale#. Factor in context, expertise, equipment, and abilities. Always make an educated guess.\n\n#produce_json#: {\"analysis\":\"[concise analysis of the preceding messages]\",\"special_ability\": \"[name]\",\"skill\": \"[skill name]\", \"why\":\"[reason]\", \"skill_DC\":\"[numerical value]\"}",
    "cast_spell_prompt": "Analyze your last message to identify what spell is being cast and what is it's potential target(s).\n\n#provide_short_summary_ai_side# Then, identify the potential target of the spell: self, creatures, or the environment. Note: classify \"humans\" as \"creatures\". If the target is one or more creatures, identify the target(s) by name or type (e.g., \"bandit\"). Specify which target number they are in the targeted group (empty if not specified). Use context clues to determine the target's identity (e.g., a shield spell typically targets an ally rather than an enemy). Then, if the target is an enemy creature, specify the spell's saving throw (str/dex/con/int/wis/cha). Remember, this remains consistent for the spell irrespective of the target or context. Then, specify if the spell requires a ranged spell attack instead of a saving throw. Then, determine the damage dice/die and their modifier (e.g., 1d8+1), and specify if a successful save would result in half damage. Then, specify the type of damage each attack inflicts, such as slashing, bludgeoning, piercing, fire, cold, etc. If an attack causes multiple types of damage, separate them with a slash (e.g., slashing/cold). Then, determine if the spell is an area of effect spell or not. Then, determine whether it's a healing spell or not. Finally, determine which classes would that spell be available to in a dnd game.\n\n#produce_json#: {\"summary\":\"[short summary]\",\"spell_name\":\"[name]\",\"spell_level\":\"[level]\",\"target\":\"[self/environment/creatures)]\",\"target_identity\":\"[name or type]\",\"target_number\":\"[number]\", \"saving_throw\": \"[#abilities#]\",\"is_ranged_spell_attk\":\"True/False\",\"damage_dice\":\"[dices]\",\"saves_half\":\"True/False\", \"damage_type\":\"[type]\",\"is_aoe\":\"True/False\",\"is_healing\":\"True/False\", \"available_to_classes\":\"[list of classes]\"}",
    "use_item_prompt": "Analyze your last message to identify the main item being used and how it's being used.\n\nStart with a brief summary of the last message, ignoring actions that concluded before it began. Identify the item's target: self, creature(s), or environment. Determine the target's identity using context clues (e.g., \"bandit\"). Specify which target number they are in the targeted group (empty if not specified). Classify \"humans\" as \"creatures\". If targeting an enemy, specify the saving throw needed (str/dex/con/int/wis/cha), similar to a comparable spell effect. Indicate if the item requires a ranged attack instead of a saving throw.\n\nNext, determine the damage dice and modifier (e.g., 1d8+1) and specify if a successful save results in half damage. Define the damage type (e.g., slashing, bludgeoning, fire), separating them with a slash if there is more than one (e.g., slashing/cold). The damage dice or type should be empty if none applies. Determine if the resulting effect is an area of effect. If the item heals, provide the healing dice and modifier. Select the most appropriate D&D stat required to use the item effectively.#is_available_misc_objects_text# Provide a step-by-step analysis of the item's usage: whether it's being moved (e.g., picking up, retrieving, storing), used passively (e.g., examining), or used actively (explicitly activating for immediate use).\n\n#produce_json#: {\"summary\":\"[short summary]\",\"item_name\":\"[name]\",\"target\":\"[self/environment/creature(s))]\",\"target_identity\":\"[name or type]\",\"target_number\":\"[number]\", \"saving_throw\": \"[#abilities#]\",\"is_ranged_attk\":\"True/False\",\"damage_dice\":\"[dices]\",\"saves_half\":\"True/False\", \"damage_type\":\"[type]\",\"is_aoe\":\"True/False\" ,\"is_healing\":\"True/False\",\"healing_dice\":\"[dice/die]\",\"stat_required_to_use_item\":\"[#abilities#]\", #is_available_misc_objects_json#\"item_usage_analysis\":\"[reasoning]\", \"item_usage_type\":\"moved/used_passively/used_actively\"}",
    "is_available_misc_objects_text": " Determine whether the item falls within the category of #available_misc_objects#.",
    "is_available_misc_objects_json": "\"#misc_obj_json_name#\":\"True/False\",",
    "all_possible_skills": "Available skills",
    "available_special_abilities_UNUSED": "Available special abilities",
    "item_is_within_reach_prompt": "Analyze the previous messages to determine if the item '#item_name#' has been mentioned. Then, determine that item is guaranteed to be present around the main character, given the current environment (ex: a loose branch in a forest, a rock near a road, etc.). It being a possibility is not sufficient, it needs to basically be guaranteed. Finally, determine if the item in question can reasonably be inferred to be within reach from the main character at the moment. \n\n#produce_json#: {\"summary\":\"[short summary]\",\"item_was_mentioned\":\"True/False\",\"item_guaranteed_in_current_environment\":\"True/False\", \"item_within_reach\":\"True/False\", \"why\":\"[reason why the item would be within reach or not]\"}",
    "get_roll_narrator_saving_throw_prompt": "Analyze the last user message to determine whether, as an outcome of the actions present in that message, the main character is currently required to make a saving throw. A saving throw represents an attempt to resist a spell, a trap, a poison, a disease, or a similar threat. You make a saving throw when your character is currently at risk of harm.\n\n#provide_full_summary# Disregard any actions that have already concluded by the time the last user message starts. Spells or magical effects can only trigger a saving throw if they would directly affect the main character, not if they are merely present around them. Do note that a saving throw is not required unless they the main character is in immediate danger. If the main character triggers a trap, then the primary situation should be 'trap_triggered'. If a trap was found, but avoided by the main character, then the primary situation should be 'trap_avoided'. Finding hidden compartments or solving puzzles does not necessarily trigger a trap. If the main character is not in battle or in immediate danger, but there could be potential risks or hazards present in the future, the primary situation should be 'potential_future_hazards'. If none of the above options would apply, classify the situation as 'other'. Determine what is the primary type of the current situation, making sure it aligns with your previous decisions. Only pick 'other' as a primary type if no other type would apply. Offer justifications for each choice, ensuring clarity and brevity.\n\n#produce_json#: {\"summary\":\"[full summary]\", \"primary_situation\":\"[saving_throw_required/trap_triggered/trap_avoided/potential_future_hazards/other]\", \"describe_primary_situation\":\"[description]\"}",
    "get_roll_narrator_battle_prompt_UNUSED": "Analyze the last user message to determine whether, as an outcome of the actions present in that message, the main character is currently being attacked by an opponent, or currently has a spell being cast at them by an opponent spellcaster.\n\n#provide_full_summary# Disregard any actions initiated by the main character. Disregard any actions that have already concluded by the time the last user message starts. An opponent is a spellcaster if his class can cast magic (ex: wizard). The main character can only be targeted by spells if a spellcaster is nearby. #mc_battle_info_text# Determine if the opponents will skip their turn or not (ex: if they are stunned or incapacitated). Determine what is the primary type of the current situation, making sure it aligns with your previous decisions. When the main character is being targeted by an opponent's spell, then the primary sistuation should be 'target of spell', even if it's also an attack. Offer justifications for each choice, ensuring clarity and brevity.\n\n#produce_json#: {\"summary\":\"[full summary]\", \"mc_is_target_of_an_attack_by_opponent\": \"True/False\", \"mc_is_target_of_a_spell_by_opponent\": \"True/False\", \"opponent_is_spell_caster\": \"True/False\", \"mc_in_battle\": \"True/False\", \"primary_situation_type\":\"[target_of_attack_by_opponent/target_of_spell_by_opponent/opponents_skip_turn/other]\", \"describe_primary_situation\":\"[description]\"}",
    "determined_by_roll_text": " Finally, determine if the outcome of that action has already been determined by a previous roll.",
    "determined_by_roll_json": ", \"outcome_determined_by_previous_roll\": \"True/False\", \"reason_outcome_determined_by_previous_roll\": \"[reason]\"",
    "create_combatant_sheet_stats_prompt": "Analyze the previous messages to create a character sheet for the following creature: #combatant_name##combatant_cr_text#. The character sheet should include the following information: the creature's name, its type, its armor class, its ability scores and it's saving throws proficiencies.\n\nFirst, summarize the information available about this creature from the previous messages. Then, identify the creature's type (ex: humanoid, dragon, elemental, etc.). If it's a humanoid, include its race and gender (leave blank if unspecified or irrelevant). Then, determine it's size (ex: small, medium, large, huge, etc.). Then, determine this creature's AC, depending on how armored this creature is#ac_range_text#. Determine what type of magic does the creature wield (either arcane or divine). Offer a justification for why that is the case (priests, clerics and druids are divine casters, while wizards and sorcerers are arcane). Then, estimate the creature's ability scores on a scale of 0 to 30, following this guide: inanimate object = 0, average person = 10, human peak = 20, deity = 30.#main_ability_score_text# The main ability score is the one used for the creature's main attacks (str or dex for physical attacks, int, wis or cha for spellcasting). Then determine it's saving throw proficiencies (a list of 3 letters ability scores for which the creature has proficiency in). #never_include_unknown# Base your analysis on the details provided in the prior messages, taking into account the typical strengths and weaknesses of the mentioned creature.\n\n#produce_json#: {\"name\":\"[name]\", \"cr\": \"[numerical value]\", \"type\":\"[type]\", \"race\":\"[race]\", \"gender\":\"[gender]\", \"size\":\"[size]\",\"ac\":\"[numerical value]\", \"is_spellcaster\":\"True/False\", \"caster_type\":\"[arcane/divine/none]\",\"ability_scores\":{\"str\":\"[numerical value]\",\"dex\":\"[numerical value]\",\"con\":\"[numerical value]\",\"int\":\"[numerical value]\",\"wis\":\"[numerical value]\",\"cha\":\"[numerical value]\"},\"main_ability_score\":\"[#abilities#]\", \"saving_throws_proficiencies\":[\"[#abilities#]\", ...]}",
    "main_ability_score_text": " It's main ability score should be #stat_range#, depending on how strong the creature is (pick one).",
    "create_combatant_sheet_attacks_prompt": "Analyze the previous messages to determine the current combat situation involving the main character and a specific creature (#combatant_name#). Focus your analysis on a single creature, even if they are part of a group.\n\nFirst, summarize the current battle situation. Next, specify that the name of the creature '#combatant_name#'#combatant_cr_text#. Next, identify the weapons used by this creature, which can be melee, ranged, natural or even magical. The weapon name should be specific, not generic (don't answer 'melee weapon' or 'ranged weapon'). Spells should not be included as weapon, but generic magic attacks could be (ex: arcane blast). From the context, deduce whether the creature uses more than one type of attack in a turn#multiattack_range_text#. Then, determine what type of magic does the creature wield (either arcane or divine). Offer a justification for why that is the case (priests, clerics and druids are divine casters, while wizards and sorcerers are arcane). #never_include_unknown# Identify how many times each type of attack can be executed per turn, noting that creatures with natural weapons typically have multiple different attack types. Then, specify the type of damage each attack inflicts, such as slashing, bludgeoning, piercing, fire, cold, etc. If an attack causes multiple types of damage, separate them with a slash (e.g., slashing/cold). Then, determine if the attack uses a ranged weapon or not. Finally, determine what ability score is used by the creature to make the attack (#abilities#).\n\n#produce_json#: {\"summary\":\"[short summary]\", \"creature_identity\":\"[name/type]\", \"cr\": \"[numerical value]\", \"caster_type\":\"[arcane/divine/none]\", \"has_multiattack\":\"True/False\", \"attacks\":[{\"weapon_name\":\"[name]\", \"how_many\":\"[numerical value]\", \"damage_type\":\"[type]\",\"is_ranged\":\"True/False\",\"ability_score_used\":\"[#abilities#]\"}]}",
    "create_combatant_sheet_spells_prompt": "Analyze the previous messages to determine the current combat situation involving the main character and a specific creature (#combatant_name#).\n\nFirst, summarize the current battle situation. Next, specify that the name of the creature is '#combatant_name#'#combatant_cr_text#. Next, determine if the creature is a spellcaster or not.#max_spell_level_text# Determine what type of magic does the creature wield (either arcane or divine). Offer a justification for why that is the case (priests, clerics and druids are divine casters, while wizards and sorcers are arcane). Then, determine what ability score is used by the creature to cast spells: int, wis or cha. Then, identify the spells this creature can cast. Add a level_x field for every available spell level, each containing a list of 2 spells they have prepared for the level. Focus on spells which would be useful in battle (including damage dealing spells). You do not need to include any spells if the creature is not a spellcaster.\n\n#produce_json#: {\"summary\":\"[short summary]\", \"creature_identity\":\"[name/type]\", \"max_spell_level\": \"[numerical value]\", \"step_by_step_reasoning\":\"[reasoning]\", \"is_spellcaster\":\"True/False\", \"caster_type\":\"[arcane/divine]\",\"spellcasting_ability_score\":\"[#abilities#]\", \"level_1\":[\"[spell name]\", ...], ...}",
    "max_spell_level_text": " If it is a spellcaster, it should be able to cast spells up to level #max_spell_level#.",
    "choose_combatant_action_prompt": "Analyze #last_x# message to determine the current combat situation involving the main character. Then, determine the main action taken this turn by #combatant_identifier#.\n\nFirst, give a step by step reasoning of what main action #combatant_identifier# is taking this turn. Then, identify who is the target of that action, using context clues to determine their identity ('self' if they are targeting themselves). Specify the target's number within the targeted group (e.g., 1 if 1st), leaving the field empty if not specified. Then, choose the type of the main action from the following list: using_a_skill, attacking#casting_spell_name#. Keep in mind that throwing an item counts as attacking. Skills refers to any skill that can be used in a game of DnD. Pay close attention to actions that might implicitly use a skill, like persuasion, deception, or intimidation, even if not explicitly labeled as such. Then, determine the name of what is used in the action. If the creature is using a skill, specify the name of that skill. If the creature is attacking with a weapon, choose a weapon from the following list of available weapons: #weapon_list#.#casting_spell_detail##casting_spell_instructions# Then, if the action has the potential to cause any damages, specify which type, such as slashing, bludgeoning, piercing, fire, cold, etc. Then, specify if it's a ranged action or not. Then, determine how many time that action is performed this turn.\n\n#produce_json#: {\"step_by_step_reasoning\":\"[reasoning]\", \"combatant_name\":\"#combatant_identifier#\", \"target_identity\":\"[name/type]\", \"target_number\":\"[number]\",  \"action_type\":\"[using_a_skill/attacking#casting_spell_json_action#]\", \"action_name\":\"[skill name/weapon name#casting_spell_json_detail#]\", \"damage_type\":\"[type]\",\"is_ranged\":\"True/False\", \"how_many\":\"[numerical value]\", \"description\":\"[description]\"}",
    "choose_action_casting_spell_name": " or casting_a_spell",
    "choose_action_casting_spell_detail": " If the creature is casting a spell, select a spell from the following list of available spells: #spell_list#.",
    "choose_action_casting_spell_instructions": " Do not include the spell's level in the spell name. Prioritise offensive spells over utility spells. Please ensure that any selected spell is present in the list of available spells. When using an AoE spell, you can target all opponents by setting the target to 'all'.",
    "choose_action_casting_spell_json_action": "/casting_a_spell",
    "choose_action_casting_spell_json_detail": "/spell name",
    "get_roll_saving_throw_prompt": "Analyze the previous message to identify what could cause the main character to have to make a saving throw and why.\n\n#provide_short_summary# Then, identify what is the cause of the save (e.g., trap). Then, identify the saving throw (#abilities#). #never_include_unknown# Then, estimate the DC scale of 0 to 30, following this guide: #dc_scale#. When determining a roll's difficulty, factor in: the context, the character's expertise, equipment, and abilities. Base your analysis on the details provided in the prior messages, taking into account the context and the typical difficulty of such situations. Then, determine the damage dice/die and their modifier (e.g., 1d8+1). Then, specify the type of damage, such as slashing, bludgeoning, piercing, fire, cold, etc. Then, determine if they would still take half damage on a successful save. Then, determine if the effect is an AOE or not. Finally, determine if the save involved falling from a high place.\n\n#produce_json#: {\"summary\":\"[short summary]\",\"cause\":\"[cause of the save)]\",\"saving_throw\": \"[#abilities#]\", \"DC\":\"[numerical value]\", \"damage_dice\":\"[damage dice/die]\", \"damage_type\":\"[type]\",\"saves_half\":\"True/False\", \"is_aoe\":\"True/False\", \"is_fall_damage\":\"True/False\"}",
    "abilities": "str/dex/con/int/wis/cha",
    "dc_scale": "Easy = 10, Medium = 15, Hard = 20, Very hard = 25, Nearly impossible = 30",
    "estimate_challenge_rating": "estimate the opponent's challenge rating, ranging from 0 to 20.",
    "never_include_unknown": "Never include 'unknown' in your answers, always take a guess.",
    "provide_short_summary_multiple_msg": "First, provide a short summary of all of the previous messages content.",
    "provide_short_summary_ai_side": "First, provide a short summary of your last message's content.",
    "provide_full_summary_ai_side": "Begin by offering a comprehensive summary of your last message.",
    "provide_short_summary": "First, provide a short summary of the previous message's content.",
    "provide_full_summary": "Begin by offering a comprehensive summary of the previous message.",
    "produce_json_short": "Produce a JSON object, using the following format",
    "produce_json": "Produce a JSON object, using the following format, making educated guesses when uncertain",
    "main_mission_failed_prompt": "Analyze the previous messages and craft a new system message coming from the dungeon master that conveys the failure of #character_name#'s main objective. This message needs to integrate smoothly with the current progression of the story so far (that is, it should seem like a natural continuation from the previous message). The location or setting shouldn't be altered in the game; the events described in this message should follow directly from the most recent event. The message should portray a sense of inevitable failure regarding their main objective, leaving no room for questions, alternative paths, or hints of potential redemption. The failure of their mission is absolute. Avoid explicitly stating that you're drafting a potential scenario. This message should be indistinguishable from an output that would be generated by the dungeon master (including the 'system: ' prefix). Limit your response to a maximum of 6 sentences.",
    "game_lost_prompt_unused": "Analyze the previous messages and create a new system message coming from the dungeon master in which #character_name# as is suddenly defeated. This message needs to take into account what you are currently doing in the story (that is, it needs to fit seamlessly in the story so far). Do not change locations in the game, the events described in this message should happen right after whatever happened in the previous message. Do not ask question on what should be done or even allow for any glimmer of hope, the situation is supposed to be hopeless (game over). Do not mention that you are writing a possible scenario, this message needs to be indistinguishable from a message that would be received from the dungeon master (including the 'system: ' prefix). Answer in maximum 6 sentences.",
    "game_won_prompt_unused": "Analyze the previous messages and create a new system message coming from the dungeon master in which #character_name# successfully completes their mission. This message needs to take into account what you are currently doing in the story (that is, it needs to fit seamlessly in the story so far). Do not change locations in the game, the events described in this message should happen right after whatever happened in the previous message. Do not pose any question or hint towards any impending challenges, the situation should represent a triumphant conclusion (game won). Do not mention that you are writing a possible scenario, this message needs to be indistinguishable from a message that would be received from the dungeon master (including the 'system: ' prefix). Answer in maximum 6 sentences.",
    "major_event_prompt": "Analyze the previous messages and create a new system message coming from the dungeon master in which #character_name# is thrust in a seemingly hopeless situation. This message needs to take into account what you are currently doing in the story (that is, it needs to fit seamlessly in the story so far). Do not change locations in the game, the events described in this message should happen right after whatever happened in the previous message. Do not ask anyone what they are going to do now or offer any glimmer of hope. Avoid summarizing or otherwise commenting on the situation or its potential impact on the adventure. Avoid controlling the main character's words and thoughts. Do not mention that you are writing a possible scenario, this message needs to be indistinguishable from a message that would be received from the dungeon master (including the 'system: ' prefix). This message should be written in the second person, in the same manner as the system messages. Answer in maximum 6 sentences.",
    "secret_info_memory_message": "The following is secret information that the player should discover over the course of the game: #secret_info#",
    "secret_info_conclusion_message": "As the player nears the achievement of their goals, incorporate the following information into the narrative in an organic, in-universe manner: #secret_info#",
    "minor_event_memory_message": "The following event should be included as soon as it makes sense in the context of the story: #minor_event#",
    "minor_event_prompt": "Generate a short description of a random event involving the main character. Analyze the previous few messages and, if #character_name# is currently involved in a confrontation, introduce a fresh development in that situation. If there's no ongoing confrontation, initiate an unexpected event involving #character_name#. This event, carrying either positive or negative implications, should naturally stem from the current context without changing the location or moving forward in time. Avoid introducing new characters, whether they're allies or adversaries. Instead, try to involve existing characters in the event or make the occurrence purely environmental, such as triggering a pre-existing trap. Avoid deus ex machina; this should feel like a natural, if somewhat unexpected, progression to the story. This description should be very concise, at most 1-2 sentences. Example of a possible event : The rival shopkeeper comes to gloat about their superiority.",
    "minor_event_prompt_old": "Analyze the previous messages and, if #character_name# is currently involved in a confrontation, introduce a fresh development in that situation. If there's no ongoing confrontation, initiate an unexpected event involving #character_name#. This event, carrying either positive or negative implications, should naturally stem from the current context without changing the location. Avoid introducing new characters, whether they're allies or adversaries. Instead, try to involve existing characters in the event or make the occurrence purely environmental, such as triggering a pre-existing trap. This unexpected twist should enhance the story without dramatically altering its direction. Avoid deus ex machina; this should feel like a natural, if somewhat unexpected, progression to the story. Do not state that this is an unexpected turn of events, an unexpected encounter or a twist, you need to let the narrative communicate that kind of information implicitly. Avoid soliciting decisions, suggesting potential actions for the character, presenting options for future course of action, or commenting on how the event could impact the adventure. Stick to a descriptive narrative only, refraining from any interpretation or subjective analysis of events. Avoid controlling the main character's actions, words and thoughts. Maintain the appearance of a genuine dungeon master's message, using the 'system: ' prefix. This message should be written in the second person, in the same manner as the system messages. Limit your response to a maximum of 4 sentences.",
    "first_minor_event_prompt_old": "Event:#first_minor_event#\n Analyze the previous messages and, if #character_name# is currently involved in a confrontation, introduce this event during the confrontation. If there's no ongoing confrontation, initiate the event. Try to involve existing characters in the event. Avoid deus ex machina; this should feel like a natural, if somewhat unexpected, progression to the story. Do not state that this is an unexpected turn of events, an unexpected encounter or a twist, you need to let the narrative communicate that kind of information implicitly. Avoid soliciting decisions, suggesting potential actions for the character, presenting options for future course of action, or commenting on how the event could impact the adventure. Stick to a descriptive narrative only, refraining from any interpretation or subjective analysis of events. Avoid controlling the main character's actions, words and thoughts. Maintain the appearance of a genuine dungeon master's message, using the 'system: ' prefix. This message should be written in the second person, in the same manner as the system messages. If the event doesn't fit the narrative or no longer apply, create an entirely new random event that would fit. Limit your response to a maximum of 4 sentences.",
    "random_encounter_prompt": "Analyze the previous messages and, if #character_name# is currently engaged in a confrontation, weave in an unforeseen development within that particular encounter. Instead of simply introducing new enemies or allies into the mix, consider a creative alteration to the dynamics of the encounter itself. If no confrontation is currently in progress, trigger a surprise encounter with an adversary or adversaries, which could either be characters that have been previously introduced or entirely new ones. The encounter or unforeseen development should naturally stem from the current story and location, serving to amplify the narrative's intensity. This confrontation can be physical, mental, a debate, or any other form of conflict suitable to the story. Do not state that this development is unforeseen or surprising, you need to let the narrative communicate that kind of information implicitly. Do not ask the character how they will react, and avoid commenting on the potential outcome of the encounter. Stick to purely descriptive narrative, avoiding any interpretation or subjective analysis of events. Avoid controlling the main character's actions, words and thoughts. Maintain the authenticity of the dungeon master's message, starting with the 'system: ' prefix. This message should be written in the second person, consistent with system messages. Be concise in your description of the events and limit your response to a maximum of 4 sentences.",
    "unstuck_message": "Suddenly, you decide that your current approach isn't working. Think of a new approach to the problem you are currently facing. Do not mention in your answer that a new approach is needed. What do you do?",
    "lack_of_variations_message": "Shift your focus towards painting a more diverse narrative. Let the story evolve naturally by exploring new ideas, leading us through unexpected twists and turns. Without explicitly mentioning this instruction, let your in-game actions mirror the spirit of this directive, showcasing a greater range of experiences and moving the story progressively forward.",
    "available_expressions": "Available expressions : [grin, smirk, raises eyebrows, glaring, wide-eyed, frowning, grits teeth, narrows eyes, gazes off, wink, smile, hug, waves hand, shakes head, nod, thumbs up, shrug, clenched fists, rolls eyes, facepalm, laugh, giggle, blows kiss, blows air, sigh, deep breath, gasp, clears throat, insane laughter, maniacal laughter, nervous laughter]",
    "available_emotions": "Available emotions : [sarcastic, savage, scary, cruel, happy, excited, cheerful, satisfied, angry, furious, amazed, ecstatic, hopeful, shocked, surprised, worried, pained, wincing, concerned, nervous, shy, crazy, awkward, suspicious, disappointed, defeated, frustrated, displeased, disapproving, annoyed, sleepy, confused, puzzled, curious, intrigued, disgusted, nauseated, determined, confident, scared, panic, thoughtful, ponder, pout, sad, unhappy, heartbroken, dejected, crying, serious, respectful, flirting, blushing, embarrassed, in love, downcast, remorseful, concentrating, focused, bracing for]",
    "get_emotions_prompt": "Analyze #last_message# segments to match the appropriate emotional response or expressions to each segment of dialogue. An expression could be a facial expression, like a smile. It could also be a physical movement, like a nod. Finally, it could also simply be a sound they are making, like laughter. Use the 'Available emotions' list as reference to choose emotions. Use the 'Available expressions' lists as a reference to choose expressions. For each segment, identify which character experienced the emotion or expression (either main for your character, other for a different character or both for both) and indicate the timing of the response (either start, end, or all). Your character should express themselves in a manner that is consistent with their personality and the story's context. Include an emotion and/or expression for each segment by inferring your character's reactions, even when not explicitly mentioned. If a segment describes another character's emotional state, include your character's presumed emotional reaction as well (this could include an expression too). Adding an emotion or an expression to a segment is optional. A segment could need an emotion but no expression, or vice versa. \n\nFormat your response as a JSON object using the following structure:{\"summary\":\"[short summary of expression-related content]\",\"emotions\":[{\"id\":\"[segment id]\",\"character\":\"[main/other/both]\",\"position\":\"[start/end/all]\",\"emotion\":\"[emotion]\"}],\"expressions\":[{\"id\":\"[segment id]\",\"character\":\"[main/other/both]\",\"position\":\"[start/end/all]\",\"expression\":\"[expression]\"}]}",
    "get_emotions_combatants_or_mc_prompt": "Analyze the last message's #action_types# to determine the appropriate emotional responses or expressions for your character, using the 'Available emotions' and 'Available expressions' lists as references.\n\nFirst, analyze the #action_types# step-by-step. Identify which #action_types# significantly affect your character's emotional state, whether they hit or miss.#emotion_text# Then, assign an appropriate emotion and/or expression for your character. Include only those #action_types# that change your character's previous emotional state or expression. Ensure the chosen emotions and expressions align with the character's personality and the story's context.#emotion_only_one_result_text#\n\nFormat your response as a JSON object:{\"analysis\":\"[concise analysis of the preceding messages]\", \"emotional_state\":[{#emotion_combatants_json##emotion_attack_no_json#\"emotion\":\"[name of the emotion]\", \"expression\":\"[name of the expression]\"}]}",
    "emotion_combatants_text": " #opps_or_allies_cap# identifiers: #combatant_list#. For each significant attack, specify the #opp_or_ally#'s identifier, the specific weapon or spell used for the attack (ex: 'longsword', 'arcane burst', etc.) and the attack number for that specific #opp_or_ally#'s weapon (should be an integer). React to at most one attack per #opp_or_ally#.",
    "emotion_attack_no_text": " For each significant attack, specify the attack number (should be an integer).",
    "emotion_only_one_result_text": " There should be at most one emotion and one expression for each #action_types#.",
    "emotion_attack_no_json": "\"attack_no\":\"[number]\", ",
    "emotion_combatants_json": "\"#opp_or_ally#_identifier\":\"[identifier]\", \"weapon_or_spell_used\":\"[name]\", ",
    "location_message": "You live in #location#.",
    "player_character": "The player's character is #character#.",
    "objectives_message": "You are dedicated to achieving your objectives. Your actions are directed towards the achievement of these goals, furthering your progress and pushing you towards a successful resolution. If you have the means to complete one of your objectives, focus your attention on the completion of that objective.",
    "quests_message": "Concentrate on achieving your ongoing quest goals while refraining from stating them explicitly.",
    "push_towards_conclusion_message": "The story appears to be dragging on. Start steering the narrative toward its final conclusion. Address the scenario's objectives and lead the narrative towards a fitting conclusion. If the main character possesses the resources and capability to triumph, steer the story to a successful resolution. Conversely, if the main character is ill-equipped to secure victory, the narrative should end in a realistic defeat.",
    "active_opponents_text": "The following opponents are currently participating in battle with the main character: ",
    "incapacitated_opponents_text": "The following opponents are currently unconscious: ",
    "valid_targets_text": "The following allies are currently participating in battle with #char_name#: ",
    "maximum_health": "You are at full health.",
    "good_health": "You bear only minor scratches.",
    "medium_health": "You're bruised and battered.",
    "bad_health": "You're gravely injured.",
    "maximum_healing": "I am now fully restored and uninjured.",
    "good_healing": "I still have a few minor scratches left, but I feel significantly better.",
    "medium_healing": "I'm still bruised and battered, but I feel noticeably better.",
    "bad_healing": "I'm still gravely injured, but there's a slight improvement in my condition.",
    "opponent_perfect_health": "untouched",
    "opponent_perfect_health_healing": "fully healed",
    "opponent_great_health": "lightly bruised",
    "opponent_good_health": "slighlty injured",
    "opponent_medium_health": "moderately injured",
    "opponent_bad_health": "gravely injured",
    "combatant_dead": "#combatant_identifier# have fallen unconscious as a result of that #attack_type#",
    "combatant_health_explanation": "#combatant_identifier# is now #healing_status#.",
    "last_opponent_wounded_explanation": "The #opponent# is now #opponent_health#, but is still standing.",
    "last_opponent_dual_wounded_explanation": "The #opponent# is now #opponent_health#, and the #opponent_2# is now #opponent_health_2#, but they are both still standing.",
    "attack_result_order": "the #order# attack was #attack_result#",
    "attack_result": "the attack was #attack_result#",
    "attacked_result_order": "The #order# #weapon# attack was #attack_result#.",
    "attacked_result": "The #weapon# attack was #attack_result#.",
    "extra_char_info": "You are a #alignment# #class##specialization#.",
    "extra_char_info_author_note": "They are a #alignment# level #level# #class##specialization#.",
    "specialization_bard": " of the college of #specialization#",
    "specialization_cleric": " of the #specialization# domain",
    "specialization_druid": " of the circle of #specialization#",
    "specialization_fighter": " of the #specialization# archetype",
    "specialization_paladin": " who took the #specialization# oath",
    "specialization_ranger": " with the #specialization# conclave",
    "specialization_rogue": " of the #specialization# archetype",
    "specialization_sorcerer": " of the #specialization# origin",
    "specialization_wizard": " of the #specialization# school",
    "specialization_barbarian": " of the #specialization# path",
    "specialization_monk": " of the #specialization# tradition",
    "specialization_artificer": " with the #specialization# speciality",
    "specialization_warlock": " with the #specialization# patron",
    "base_attack": "I #then_text#attempted to attack #opponent_identity##weapon_text##number_of_times#: ",
    "assassinate_attack": "I leveraged my assassin skills to gain the upper hand.",
    "hidden_attack": "I attacked from a concealed position, giving me a tactical advantage.",
    "rage_attack": "Fueled by my rage, my attack was more powerful.",
    "rage_attack_multiple": "Fueled by my rage, my attacks were more powerful.",
    "flurry_of_blows_attack": "I channeled my inner ki to perform a Flurry of Blows",
    "fire_fists_attack": ", my fists igniting into flames as I attacked",
    "fire_fists_last_attack": "My fists ignited into flames on my last strike.",
    "action_surge_attack": "I felt a burst of energy, allowing me to perform #nb_attacks# additional attacks.",
    "spirit_attack": "Friendly spirits attacked the opponent for me.",
    "base_skill": "I attempted #skill_or_ability_text#. Reason: \"#reason#\"",
    "base_skill_combatant": "#identity# attempted #skill_or_ability_text#.",
    "skill_text": "to use '#skill_name#' by using their #stat_name#",
    "ability_text": "to use their #stat_name#",
    "monk_wielded_weapon": "Monks don't wield weapons, opting instead to use martial arts.",
    "nb_attacks_text": "You can attack #nb_attacks# times every turn.",
    "nb_attacks_crossbow_expert_text": "You can attack 1 time with your main weapon + 1 time with your hand crossbow every turn.",
    "me_and_allies_text": "me and my allies",
    "me_text": "me",
    "myself_and_allies_text": "myself and my allies",
    "myself_text": "myself",
    "base_spell": "I attempted to cast the spell '#spell_name#' at #specific_target##saving_throw_text#.",
    "base_spell_attack": "I #then_text#attempted to attack #opponent_identity##attack_used##number_of_times#: ",
    "base_use_item_or_ability": "I attempted to use '#magic_name#' at #specific_target##saving_throw_text#.",
    "base_wild_magic": "#char_pronoun# originally attempted to cast '#original_spell_name#', but it was replaced by '#spell_name#' instead.",
    "used_lay_on_hands": "I attempted to use lay on hands#target_text#.",
    "special_text_attack": "I used #special_text#",
    "saving_throw_text": ", which will test their #saving_throw#",
    "base_attacked": "#combatant_identity# attempted to attack #target_identity#",
    "base_target_of_spell": "#combatant_identity# attempted to cast the spell '#spell_name#' at #target_identity#.",
    "base_target_of_spell_attack": "#combatant_identity##then_text# attempted to attack #target_identity# with the spell '#spell_name#'#nb_times#",
    "base_saving_throw": "I attempted to do a #stat_name# saving throw due to #cause#.",
    "critical_success": "It was a critical success! #injuries#Describe the spectacular outcome as that action succeeds beyond expectations.",
    "critical_failure": "It was a critical failure! #injuries#Describe the unfortunate outcome as that action fails in the worst possible way.",
    "success": "It was a success! #injuries#Describe the positive outcome as that action succeeds as intended.",
    "failure": "It was a failure! #injuries#Describe the outcome as that action fails to achieve its intended result.",
    "critical_success_opponent_spell": "Their spellcasting was a critical success. #injuries#Describe the dire consequences as the spell succeeds beyond all expectations.",
    "critical_failure_opponent_spell": "Their spellcasting was a critical failure. #injuries#Describe the fortunate turn of events as that spell fails miserably",
    "success_opponent_spell": "Their spellcasting was successful. #injuries#Describe the adverse effects as that spell succeeds as intended.",
    "failure_opponent_spell": "Their spellcasting was unsuccessful. #injuries#Describe the beneficial turn of events as that spell fails.",
    "critical_success_combatant_skill": "They were critically successful!",
    "critical_failure_combatant_skill": "They were critically unsuccessful!",
    "success_combatant_skill": "They were successful!",
    "failure_combatant_skill": "They were unsuccessful!",
    "opponent_attack_result": "Their attack was #attack_result#.",
    "opponent_multiple_attack_result": "Their first attack was #first_result#, while the second was #second_result#.",
    "opponent_both_attack_result": "Both of their attacks were #result#.",
    "critical_success_words": "a critical success",
    "critical_failure_words": "a critical failure",
    "success_words": "successful",
    "failure_words": "unsuccessful",
    "critical_success_end": "Describe the adverse effects as that attack succeeds as intended.",
    "critical_failure_end": "Describe the fortunate turn of events as that attack fails miserably",
    "success_end": "Describe the adverse effects as that attack succeeds as intended.",
    "failure_end": "Describe the beneficial turn of events as that attack fails.",
    "critical_success_magic": "#target# critically failed to avoid the effects",
    "critical_failure_magic": "#target# was critically successful at avoiding the effects",
    "success_magic": "#target# failed to avoid the effects",
    "failure_magic": "#target# was successful at avoiding the effects",
    "saved_half_magic": "#target# managed to partially avoid the effects",
    "opponent_end_multiple": "Describe this turn of event as the first attack #first_result# while the second attack #second_result#.",
    "opponent_end_both": "Describe this turn of event as both attacks #result#.",
    "critical_success_end_result": "yields extraordinary success",
    "critical_failure_end_result": "fails miserably",
    "success_end_result": "succeeds as intended",
    "failure_end_result": "fails",
    "critical_success_end_result_both": "yield extraordinary success",
    "critical_failure_end_result_both": "fail miserably",
    "success_end_result_both": "succeed as intended",
    "failure_end_result_both": "fail",
    "sorcery_points_used": "No spell slot level #spell_slot# remaining, so used #sorcery_points# sorcery points instead.",
    "spell_slot_used": "A spell slot of level #spell_slot# was used.",
    "forced_upcasted_spell_slot_used": "No spell slot level #original_spell_slot# remaining, the spell was cast at level #spell_slot# instead.",
    "upcasted_spell_slot_used": "The spell was upcasted to level #spell_slot#.",
    "no_spell_slot_used": "The spell was a cantrip, so no spell slots were used.",
    "spell_slot_remaining": "#spell_slot_left# remaining for that level.",
    "no_spellcasting_ability": "I attempted to cast a spell, but I failed since I possess no spellcasting abilities.",
    "no_spellcasting_ability_info_text": "Attempt to cast a spell failed, no spellcasting abilities.",
    "no_spell_slots_above_level_remaining_message": "No spell slots above level #level# are available until you take a long rest, but you still have access to any spell slots of a lower level.",
    "no_spell_slots_remaining_message": "You don't have any spell slots remaining, and thus can't cast anything other than cantrips.",
    "max_spell_level_message": "All your spell slots are available, allowing you to cast spells up to level #level#.",
    "attack_target_location_unknown": "I attempted to attack '#attack_target#', but it failed since the target's location is not currently known by me.",
    "spell_not_available_to_class": "I attempted to cast #spell_name#, but I failed since I do not have access to that spell as a #char_class#.",
    "spell_not_available_to_class_info_text": "Attempt to cast '#spell_name#' failed, spell is not available to the '#char_class#' class.",
    "spell_oob_only": "I attempted to cast #spell_name#. I failed since this spell can only be cast outside of battle due to its long casting time.",
    "spell_oob_only_info_text": "Attempt to cast '#spell_name#' failed, casting time too long to be used during a battle.",
    "spell_level_too_high": "I attempted to cast #spell_name#, but I failed since the spell is too high level.",
    "spell_level_too_high_info_text": "Attempt to cast '#spell_name#' failed, spell is too high level.",
    "spell_upcasted": "The spell was upcast by #upcast_level# levels, amplifying its effect accordingly.",
    "no_spell_slots": "I attempted to cast #spell_name#, but I failed since I don't have enough spells of that level.",
    "no_spell_slots_info_text": "Attempt to cast #spell_name# failed, not spells level '#spell_level#' or above remaining.",
    "no_lay_on_hands_left": "I attempted to use lay on hands, but I failed since I don't have any left for the day.",
    "lay_on_hands_no_hp_remaining_message": "Your Lay on Hands healing power is depleted until you take a long rest.",
    "lay_on_hands_hp_remaining_message": "You still have #hp_left# hit points left to heal with Lay on Hands.",
    "fighter_features_used_message": "You cannot use #used_features# again until you take a short or long rest.",
    "action_surge_not_used_message": "You can still use Action Surge one time before having to take a short or long rest.",
    "second_wind_full_health_message": "You don't need to use second wind since you're already at full health.",
    "ki_points_available_message": "You still have #ki_points# ki points available. You can use 1 ki point to either do a flurry of blows or dodge as a bonus action, but you can't use both at the same time. You can use the same ability multiple times in a row if necessary.",
    "ki_points_not_available_message": "You don't have any ki points left to use.",
    "sorcery_points_available_message": "You still have #sorcery_points# sorcery points available. You can use them to create spell slots if needed. You can also use them to apply either the Heightened Spell or Twinned Spell metamagic (not both). Heightened spell gives one target disadvantage on their saving throw, while Twinned Spell allows you to target two creatures with the same spell (it needs to be a single target spell).",
    "sorcery_points_not_available_message": "You don't have any sorcery points left to use.",
    "bardic_inspiration_available_message": "You still have #bardic_inspirations# bardic inspirations available. You can use them to inspire your allies, granting them a d8 to add to their attack rolls and saving throw until your next turn. You can also use them to unsettle an opponent, forcing them to subtract a d8 from their next saving throw.",
    "bardic_inspiration_not_available_message": "You don't have any bardic inspirations left to use.",
    "bardic_inspiration_used": "Your allies were inspired by you, attacking with renewed vigor.",
    "patient_defense_info": "Patient defense: Dodge action (costs 1 ki point).",
    "partial_damage_after_success": "Although I managed to dodge most of the damage, I still sustained some injuries.",
    "partial_damage_after_fail": "Although I couldn't completely avoid the attack, my evasion skills helped reduce the sustained damage.",
    "no_damage_evasion": "I skillfully evaded all damage using my #evasion_text# ability.",
    "partial_damage_after_success_spell": "I avoided most of the damages",
    "partial_damage_after_fail_spell": "I managed to avoid some of the damages",
    "no_damage_evasion_spell": "I completely evaded the spell using '#evasion_text#'",
    "incurred_damage": "I sustained #injury_level# injuries as a result of the #action_name#.",
    "long_rest_info": "You have completed a long rest.",
    "long_rest_info_no_spells": "Your health returns to full and you regain all your hit dice.",
    "long_rest_info_with_spells": "Your health returns to full. You regain both your hit dice and spell slots.",
    "long_rest_info_with_rage": "Your health returns to full. You regain both your hit dice and the amount of time you can rage for the day.",
    "long_rest_info_with_ki_points": "Your health returns to full. You regain both your hit dice and all your ki points.",
    "long_rest_info_lay_on_hands": " You also regain all your available lay on hands healing for the day.",
    "long_rest_info_sorcery_points": " You also regain all your sorcery points for the day.",
    "long_rest_info_bardic_inspiration": " You also regain all your bardic inspirations dice.",
    "long_rest_info_fighter": " You also regain your second wind and action surge.",
    "long_rest_info_arcane_ward": " You also recharge your arcane ward.",
    "rest_info_frenzy": " You no longer feel exhausted from your frenzy.",
    "short_rest_info": "You have completed a short rest.",
    "short_rest_info_no_spells": "You have done more than 2 short rest today, you have not regained any spell slots.",
    "short_rest_info_spells": "You have regained 1 spell slot for every level.",
    "short_rest_info_with_ki_points": "You have regained all your ki points.",
    "short_rest_info_fighter": " You have also regained your second wind and action surge.",
    "arcane_recovery_already_used_today": "You have already used arcane recovery today, no spell slots recovered.",
    "arcane_recovery_failed_not_enough_spell_slots": "You did not use arcane recovery, there were not enough spell slots to recover.",
    "item_not_in_inventory": "The character tried to use '#item_name#', but since it's not present in their inventory, the action can't be executed.",
    "item_not_in_inventory_info_text": "Item '#item_name#' isn't in the inventory.",
    "second_wind_message_intro": "Using Second Wind:",
    "second_wind_message": "You used second wind used to heal #hp_healed# HP.",
    "second_wind_message_automatic_intro": "Using Second Wind (#bold#HP below 50%#bold#):",
    "second_wind_message_automatic": "Second Wind triggered automatically, healing #hp_healed# HP.",
    "is_raging_message": "You are currently in a state of rage.",
    "frenzied_message": "The Frostblade's curse has taken over! You are now in a frenzied rage, driven to defeat every opponent in sight. You cannot flee or avoid battle while in this state.",
    "frenzy_used_message": "You are still exhausted from your previous frenzy.",
    "started_raging_eval": "You #green#started#green# raging! It will last for up to #bold#10#bold# rounds.",
    "stopped_raging_eval": "You've #red#stopped#red# raging.",
    "stopped_raging_frenzy_eval": "Your frenzied rage #red#stopped#red#. You are now #red#exhausted#red#.",
    "failed_to_rage_eval": "You tried to start raging, but you were too #red#exhausted#red# to do so. You need to take a long rest before you can rage again.",
    "failed_to_rage_author_note": " tried to start raging, but she was too exhausted to do so.",
    "failed_to_rage_frenzy_used_eval": "You tried to start raging, but you were too #red#exhausted#red# from your previous frenzy to do so. You need to take a rest before you can rage again.",
    "failed_to_rage_frenzy_used_author_note": " tried to start raging, but she was too exhausted from her previous frenzy to do so.",
    "char_is_frenzied_text": " is frenzied and compelled to attack all visible enemies.",
    "opponents_surprised_author_note": "The opponents have been take by surprise.",
    "all_opponents_defeated": "All enemies were defeated.",
    "all_opponents_within_range_defeated": "All targeted enemies within range were defeated, but there are still other opponents left.",
    "battle_still_ongoing": "The battle is still ongoing since not all opponents were defeated.",
    "order_1": "first",
    "order_2": "second",
    "order_3": "third",
    "order_4": "fourth",
    "common_skills": [
        "athletics",
        "acrobatics",
        "sleight of Hand",
        "stealth",
        "arcana",
        "history",
        "investigation",
        "nature",
        "religion",
        "animal Handling",
        "insight",
        "medicine",
        "perception",
        "survival",
        "deception",
        "intimidation",
        "performance",
        "persuasion"
    ]
}